// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuctionAcceptBid extends ethereum.Event {
  get params(): AuctionAcceptBid__Params {
    return new AuctionAcceptBid__Params(this);
  }
}

export class AuctionAcceptBid__Params {
  _event: AuctionAcceptBid;

  constructor(event: AuctionAcceptBid) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AuctionBid extends ethereum.Event {
  get params(): AuctionBid__Params {
    return new AuctionBid__Params(this);
  }
}

export class AuctionBid__Params {
  _event: AuctionBid;

  constructor(event: AuctionBid) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get bidder(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amountToken(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AuctionCancelBid extends ethereum.Event {
  get params(): AuctionCancelBid__Params {
    return new AuctionCancelBid__Params(this);
  }
}

export class AuctionCancelBid__Params {
  _event: AuctionCancelBid;

  constructor(event: AuctionCancelBid) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EndSale extends ethereum.Event {
  get params(): EndSale__Params {
    return new EndSale__Params(this);
  }
}

export class EndSale__Params {
  _event: EndSale;

  constructor(event: EndSale) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SaleBuy extends ethereum.Event {
  get params(): SaleBuy__Params {
    return new SaleBuy__Params(this);
  }
}

export class SaleBuy__Params {
  _event: SaleBuy;

  constructor(event: SaleBuy) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amountToken(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class StartSale extends ethereum.Event {
  get params(): StartSale__Params {
    return new StartSale__Params(this);
  }
}

export class StartSale__Params {
  _event: StartSale;

  constructor(event: StartSale) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get duration(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class UpdateAllowedToken extends ethereum.Event {
  get params(): UpdateAllowedToken__Params {
    return new UpdateAllowedToken__Params(this);
  }
}

export class UpdateAllowedToken__Params {
  _event: UpdateAllowedToken;

  constructor(event: UpdateAllowedToken) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get priceFeed(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdateListing extends ethereum.Event {
  get params(): UpdateListing__Params {
    return new UpdateListing__Params(this);
  }
}

export class UpdateListing__Params {
  _event: UpdateListing;

  constructor(event: UpdateListing) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get startTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class UpdateTreasuryWallet extends ethereum.Event {
  get params(): UpdateTreasuryWallet__Params {
    return new UpdateTreasuryWallet__Params(this);
  }
}

export class UpdateTreasuryWallet__Params {
  _event: UpdateTreasuryWallet;

  constructor(event: UpdateTreasuryWallet) {
    this._event = event;
  }

  get newTreasuryWallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldTreasuryWallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Marketplace__getBidsResultValue0Struct extends ethereum.Tuple {
  get bidder(): Address {
    return this[0].toAddress();
  }

  get amountToken(): BigInt {
    return this[1].toBigInt();
  }

  get time(): BigInt {
    return this[2].toBigInt();
  }
}

export class Marketplace__getListingsResult {
  value0: BigInt;
  value1: Address;

  constructor(value0: BigInt, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getStartTime(): BigInt {
    return this.value0;
  }

  getToken(): Address {
    return this.value1;
  }
}

export class Marketplace__getSalesResultValue0Struct extends ethereum.Tuple {
  get startTime(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get duration(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  ADMIN_ROLE(): Bytes {
    let result = super.call("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN_ROLE", "ADMIN_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  GOVERNOR_ROLE(): Bytes {
    let result = super.call("GOVERNOR_ROLE", "GOVERNOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_GOVERNOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "GOVERNOR_ROLE",
      "GOVERNOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MIN_AMOUNT(): BigInt {
    let result = super.call("MIN_AMOUNT", "MIN_AMOUNT():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MIN_AMOUNT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MIN_AMOUNT", "MIN_AMOUNT():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PERCENTAGE_INCREASE(): BigInt {
    let result = super.call(
      "PERCENTAGE_INCREASE",
      "PERCENTAGE_INCREASE():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_PERCENTAGE_INCREASE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PERCENTAGE_INCREASE",
      "PERCENTAGE_INCREASE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PERCENTAGE_TAX(): BigInt {
    let result = super.call("PERCENTAGE_TAX", "PERCENTAGE_TAX():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PERCENTAGE_TAX(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PERCENTAGE_TAX",
      "PERCENTAGE_TAX():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  WETH(): Address {
    let result = super.call("WETH", "WETH():(address)", []);

    return result[0].toAddress();
  }

  try_WETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH", "WETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowedTokens(param0: Address): Address {
    let result = super.call(
      "allowedTokens",
      "allowedTokens(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_allowedTokens(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "allowedTokens",
      "allowedTokens(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBids(
    collection: Address,
    tokenId: BigInt,
    token: Address,
    index: BigInt
  ): Marketplace__getBidsResultValue0Struct {
    let result = super.call(
      "getBids",
      "getBids(address,uint256,address,int256):((address,uint256,uint256))",
      [
        ethereum.Value.fromAddress(collection),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromSignedBigInt(index)
      ]
    );

    return changetype<Marketplace__getBidsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getBids(
    collection: Address,
    tokenId: BigInt,
    token: Address,
    index: BigInt
  ): ethereum.CallResult<Marketplace__getBidsResultValue0Struct> {
    let result = super.tryCall(
      "getBids",
      "getBids(address,uint256,address,int256):((address,uint256,uint256))",
      [
        ethereum.Value.fromAddress(collection),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromSignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Marketplace__getBidsResultValue0Struct>(value[0].toTuple())
    );
  }

  getListings(param0: Address): Marketplace__getListingsResult {
    let result = super.call(
      "getListings",
      "getListings(address):(uint256,address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Marketplace__getListingsResult(
      result[0].toBigInt(),
      result[1].toAddress()
    );
  }

  try_getListings(
    param0: Address
  ): ethereum.CallResult<Marketplace__getListingsResult> {
    let result = super.tryCall(
      "getListings",
      "getListings(address):(uint256,address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__getListingsResult(
        value[0].toBigInt(),
        value[1].toAddress()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSales(
    collection: Address,
    tokenId: BigInt
  ): Marketplace__getSalesResultValue0Struct {
    let result = super.call(
      "getSales",
      "getSales(address,uint256):((uint256,uint256,uint256,uint256))",
      [
        ethereum.Value.fromAddress(collection),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );

    return changetype<Marketplace__getSalesResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getSales(
    collection: Address,
    tokenId: BigInt
  ): ethereum.CallResult<Marketplace__getSalesResultValue0Struct> {
    let result = super.tryCall(
      "getSales",
      "getSales(address,uint256):((uint256,uint256,uint256,uint256))",
      [
        ethereum.Value.fromAddress(collection),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Marketplace__getSalesResultValue0Struct>(value[0].toTuple())
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  treasuryWallet(): Address {
    let result = super.call("treasuryWallet", "treasuryWallet():(address)", []);

    return result[0].toAddress();
  }

  try_treasuryWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "treasuryWallet",
      "treasuryWallet():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get governor_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get allowedTokens_(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get priceFeeds_(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get initialListings_(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptBidCall extends ethereum.Call {
  get inputs(): AcceptBidCall__Inputs {
    return new AcceptBidCall__Inputs(this);
  }

  get outputs(): AcceptBidCall__Outputs {
    return new AcceptBidCall__Outputs(this);
  }
}

export class AcceptBidCall__Inputs {
  _call: AcceptBidCall;

  constructor(call: AcceptBidCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AcceptBidCall__Outputs {
  _call: AcceptBidCall;

  constructor(call: AcceptBidCall) {
    this._call = call;
  }
}

export class BidCall extends ethereum.Call {
  get inputs(): BidCall__Inputs {
    return new BidCall__Inputs(this);
  }

  get outputs(): BidCall__Outputs {
    return new BidCall__Outputs(this);
  }
}

export class BidCall__Inputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amountToken(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BidCall__Outputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }
}

export class BuyETHCall extends ethereum.Call {
  get inputs(): BuyETHCall__Inputs {
    return new BuyETHCall__Inputs(this);
  }

  get outputs(): BuyETHCall__Outputs {
    return new BuyETHCall__Outputs(this);
  }
}

export class BuyETHCall__Inputs {
  _call: BuyETHCall;

  constructor(call: BuyETHCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BuyETHCall__Outputs {
  _call: BuyETHCall;

  constructor(call: BuyETHCall) {
    this._call = call;
  }
}

export class CancelBidCall extends ethereum.Call {
  get inputs(): CancelBidCall__Inputs {
    return new CancelBidCall__Inputs(this);
  }

  get outputs(): CancelBidCall__Outputs {
    return new CancelBidCall__Outputs(this);
  }
}

export class CancelBidCall__Inputs {
  _call: CancelBidCall;

  constructor(call: CancelBidCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CancelBidCall__Outputs {
  _call: CancelBidCall;

  constructor(call: CancelBidCall) {
    this._call = call;
  }
}

export class EndSaleCall extends ethereum.Call {
  get inputs(): EndSaleCall__Inputs {
    return new EndSaleCall__Inputs(this);
  }

  get outputs(): EndSaleCall__Outputs {
    return new EndSaleCall__Outputs(this);
  }
}

export class EndSaleCall__Inputs {
  _call: EndSaleCall;

  constructor(call: EndSaleCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EndSaleCall__Outputs {
  _call: EndSaleCall;

  constructor(call: EndSaleCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get callerConfirmation(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class StartSaleCall extends ethereum.Call {
  get inputs(): StartSaleCall__Inputs {
    return new StartSaleCall__Inputs(this);
  }

  get outputs(): StartSaleCall__Outputs {
    return new StartSaleCall__Outputs(this);
  }
}

export class StartSaleCall__Inputs {
  _call: StartSaleCall;

  constructor(call: StartSaleCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get duration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class StartSaleCall__Outputs {
  _call: StartSaleCall;

  constructor(call: StartSaleCall) {
    this._call = call;
  }
}

export class UpdateAllowedTokenCall extends ethereum.Call {
  get inputs(): UpdateAllowedTokenCall__Inputs {
    return new UpdateAllowedTokenCall__Inputs(this);
  }

  get outputs(): UpdateAllowedTokenCall__Outputs {
    return new UpdateAllowedTokenCall__Outputs(this);
  }
}

export class UpdateAllowedTokenCall__Inputs {
  _call: UpdateAllowedTokenCall;

  constructor(call: UpdateAllowedTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get priceFeed(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateAllowedTokenCall__Outputs {
  _call: UpdateAllowedTokenCall;

  constructor(call: UpdateAllowedTokenCall) {
    this._call = call;
  }
}

export class UpdateListingCall extends ethereum.Call {
  get inputs(): UpdateListingCall__Inputs {
    return new UpdateListingCall__Inputs(this);
  }

  get outputs(): UpdateListingCall__Outputs {
    return new UpdateListingCall__Outputs(this);
  }
}

export class UpdateListingCall__Inputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateListingCall__Outputs {
  _call: UpdateListingCall;

  constructor(call: UpdateListingCall) {
    this._call = call;
  }
}

export class UpdateTreasuryWalletCall extends ethereum.Call {
  get inputs(): UpdateTreasuryWalletCall__Inputs {
    return new UpdateTreasuryWalletCall__Inputs(this);
  }

  get outputs(): UpdateTreasuryWalletCall__Outputs {
    return new UpdateTreasuryWalletCall__Outputs(this);
  }
}

export class UpdateTreasuryWalletCall__Inputs {
  _call: UpdateTreasuryWalletCall;

  constructor(call: UpdateTreasuryWalletCall) {
    this._call = call;
  }

  get newTreasuryWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateTreasuryWalletCall__Outputs {
  _call: UpdateTreasuryWalletCall;

  constructor(call: UpdateTreasuryWalletCall) {
    this._call = call;
  }
}

export class WrapAndBidCall extends ethereum.Call {
  get inputs(): WrapAndBidCall__Inputs {
    return new WrapAndBidCall__Inputs(this);
  }

  get outputs(): WrapAndBidCall__Outputs {
    return new WrapAndBidCall__Outputs(this);
  }
}

export class WrapAndBidCall__Inputs {
  _call: WrapAndBidCall;

  constructor(call: WrapAndBidCall) {
    this._call = call;
  }

  get collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amountWETH(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WrapAndBidCall__Outputs {
  _call: WrapAndBidCall;

  constructor(call: WrapAndBidCall) {
    this._call = call;
  }
}
